---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  /api/v1/todos:
    get:
      summary: get todo list
      description: "お試しAPI"
      responses:
        '200':
          description: todo list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    done:
                      type: boolean
                  required:
                  - name
                  - done
  /api/users/{username}:
    get:
      summary: get userId
      description: "userIdを取得する"
      parameters:
      - name: "username"
        in: "path"
        description: "ユーザー名"
        required: true
        schema:
          type: "string"
      responses:
        '200':
          description: userId
          content:
            application/json:
              schema:
                schema:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    format: "int64"
  /api/users/session/{username}:
    get:
      summary: get session_times
      description: "session_timesを更新し、取得する"
      parameters:
      - name: "username"
        in: "path"
        description: "ユーザー名"
        required: true
        schema:
          type: "string"
      responses:
        '200':
          description: session_times
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  session_times:
                    type: "integer"
                    format: "int64"
  /api/words/{word}:
    get:
      summary: get word
      description: "引数の単語から単語の意味を返すAPI"
      parameters:
        - name: "word"
          in: "path"
          description: "取得したい単語"
          required: true
          schema:
            type: "string"
      responses:
        '200':
          description: word meaning
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    format: "int64"
                  word:
                    type: "string"
                  mean:
                    type: "string"
  /api/words:
      post:
        summary: post word
        description: "取得した単語を登録する関数"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  word:
                    type: "string"
                    example: "piyopiyo"
        responses:
          '201':
            description: word meaning
  /api/conversations/{userid}/{session_times}:
      get:
        summary: get  conversations history
        description: "userに紐づく、userの会話履歴を取得するAPI"
        parameters:
          - name: "userid"
            in: "path"
            description: "取得したいuserのID"
            required: true
            schema:
              type: "integer"
              format: "int64"
          - name: "session_times"
            in: "path"
            description: "セッション回数"
            required: true
            schema:
              type: "integer"
              format: "int64"
        responses:
          '200':
            description: conversations history
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: "integer"
                        format: "int64"
                      context:
                        type: "string"
                      conversation_times:
                        type: "integer"
                        format: "int64"
                      gpt_flag:
                        type: boolean
  /api/conversations/{userid}:
      get:
        summary: get  conversations history
        description: "userに紐づく、userの会話履歴を取得するAPI"
        parameters:
          - name: "userid"
            in: "path"
            description: "取得したいuserのID"
            required: true
            schema:
              type: "integer"
              format: "int64"
        responses:
          '200':
            description: conversations history
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: "integer"
                        format: "int64"
                      context:
                        type: "string"
                      conversation_times:
                        type: "integer"
                        format: "int64"
                      gpt_flag:
                        type: boolean
  /api/conversations:
      post:
        summary: conversations post
        description: "取得した会話を登録し、その応答結果を返す関数"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  userid:
                    type: "integer"
                    example: "1"
                  context:
                    type: "string"
                    example: "Hello.What's your favorite sports?"
                  conversation_times:
                    type: "integer"
                    example: "1"
                  session_times:
                    type: "integer"
                    example: "1"
        responses:
          '200':
            description: conversations
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    response:
                      type: "string"
  /api/userwords/{userid}:
      get:
        summary: get userword list
        description: "userが登録した単語帳データを取得するAPI"
        parameters:
          - name: "userid"
            in: "path"
            description: "取得したいuserのID"
            required: true
            schema:
              type: "integer"
              format: "int64"
        responses:
          '200':
            description: userword list
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      userword:
                        type: object
                        properties:
                          id:
                            type: "integer"
                            format: "int64"
                          word_number:
                            type: "integer"
                            format: "int64"
                          count:
                            type: "integer"
                            format: "int64"
                      word:
                        type: "string"
servers:
  - url: http://localhost:80
  - url: http://107.22.211.32:80/
